{"version":3,"sources":["Components/Search/SearchResults/Results.js","Components/Search/Search.js","Context/CountriesContext/countries.js","Components/CountryDisplay/Country.js","Components/Wether/Wether.js","App.js","reportWebVitals.js","index.js"],"names":["Results","props","className","children","Search","htmlFor","placeholder","id","type","onChange","search","countries","map","country","hide","name","message","onClick","ShowClicked","Math","random","Countries","createContext","Country","capital","population","language","EN","src","width","height","alt","Wether","temp","wetherSrc","wind","dir","App","useState","setSearch","setCountries","searching","setSearching","wetherInfo","setWetherInfo","useEffect","require","config","length","axios","get","process","then","result","console","log","data","current","catch","err","findedCountries","filter","c","toLowerCase","includes","flag","languages","temperature","weather_icons","wind_speed","Provider","value","e","target","showCountry","find","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afe4fd9f.chunk.js","sourcesContent":["import \"./Results.css\";\r\n// import { useContext } from \"react\";\r\n//import { Countries } from \"../../../Context/CountriesContext/countries\";\r\nconst Results = (props) => {\r\n  // const countries = useContext(Countries);\r\n  return <ul className=\"ul\">{props.children}</ul>;\r\n};\r\n\r\nexport default Results;\r\n","import \"./Search.css\";\r\nimport SearchResults from \"./SearchResults/Results\";\r\n\r\nconst Search = (props) => {\r\n  return (\r\n    <div className=\"Search_Parrent\">\r\n      <div>\r\n        <label htmlFor=\"Search\">find Countries </label>\r\n        <input\r\n          className=\"Search\"\r\n          placeholder=\"Search\"\r\n          id=\"Search\"\r\n          type=\"text\"\r\n          onChange={props.search}\r\n        />\r\n        <SearchResults>\r\n          {props.countries.map((country) => {\r\n            return props.hide ? null : (\r\n              <li className=\"list\" key={country.name + Math.random()}>\r\n                {country.name}\r\n                {country.message ?? (\r\n                  <span\r\n                    onClick={() => props.ShowClicked(country.name)}\r\n                    className=\"Show\"\r\n                  >\r\n                    Show\r\n                  </span>\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </SearchResults>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { createContext } from \"react\";\r\n\r\nexport const Countries = createContext(null);\r\n","import \"./Country.css\";\r\n\r\nconst Country = (props) => {\r\n  return (\r\n    <div className=\"Country\">\r\n      <h2>{props.name}</h2>\r\n      <div className=\"info\">\r\n        <label>Capital: {props.capital}</label>\r\n        <label>Population: {props.population}</label>\r\n      </div>\r\n      <h3>languages</h3>\r\n      <ul>\r\n        {props.language\r\n          ? props.language.map((EN) => {\r\n              return <li key={EN.name + Math.random()}>{EN.name} </li>;\r\n            })\r\n          : null}\r\n      </ul>\r\n      <img src={props.src} width=\"200px\" height=\"90px\" alt=\"flag\" />\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import \"./Wether.css\";\r\n\r\nconst Wether = (props) => {\r\n  return (\r\n    <div className=\"Wether_container\">\r\n      {\" \"}\r\n      <label>\r\n        <span>Temperature:</span> {props.temp} Celcius\r\n      </label>\r\n      <img src={props.wetherSrc} width=\"50px\" alt=\"wether\" />\r\n      <label>\r\n        <span>wind: </span>\r\n        {props.wind} mph direction {props.dir}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wether;\r\n","import \"./App.css\";\n\nimport Search from \"./Components/Search/Search\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Countries } from \"./Context/CountriesContext/countries\";\nimport Country from \"./Components/CountryDisplay/Country\";\nimport WetherInfo from \"./Components/Wether/Wether\";\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [searching, setSearching] = useState([]);\n  const [wetherInfo, setWetherInfo] = useState(false);\n\n  useEffect(() => {\n    require(\"dotenv\").config();\n    var api_key = process.env.REACT_APP_API_KEY;\n\n    if (searching.length === 1 && searching[0]?.name) {\n      const country = searching[0]?.name;\n\n      axios\n        .get(\n          `http://api.weatherstack.com/current?access_key=${api_key}&query=${country}`\n        )\n        .then((result) => {\n          console.log(result.data.current);\n          setWetherInfo(result.data.current);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [searching]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://restcountries.eu/rest/v2/all\")\n      .then((result) => {\n        setCountries(result.data);\n      })\n      .catch((err) => {});\n  }, []);\n\n  useEffect(() => {\n    const findedCountries = countries.filter((c) => {\n      return c.name.toLowerCase().includes(search.toLowerCase());\n    });\n    if (!search) {\n      setSearching([]);\n    } else {\n      if (findedCountries.length > 10) {\n        console.log(\"tomany\");\n        setSearching([{ message: \"Too many matches, specify another filter\" }]);\n      } else if (findedCountries.length < 1) {\n        console.log(\"les one\");\n        setSearching([{ message: \"no countries found\" }]);\n      } else {\n        setSearching(findedCountries);\n      }\n    }\n  }, [search, countries]);\n\n  const searchingHandler = (e) => {\n    setSearch(e.target.value);\n  };\n  const country =\n    searching.length < 2 && searching[0]?.name\n      ? searching.map((country) => {\n          return (\n            <Country\n              key={country.population + Math.random()}\n              name={country.name}\n              src={country.flag}\n              capital={country.capital}\n              population={country.population}\n              language={country.languages}\n              temp={wetherInfo.temperature}\n            >\n              {wetherInfo ? (\n                <WetherInfo\n                  wetherSrc={wetherInfo.weather_icons[0]}\n                  wind={wetherInfo.wind_speed}\n                  dir={\"Sds\"}\n                />\n              ) : null}\n            </Country>\n          );\n        })\n      : null;\n\n  const showClickedHandler = (name) => {\n    const showCountry = searching.find((c) => c.name === name);\n    setSearching([showCountry]);\n  };\n  return (\n    <div className=\"App\">\n      <div>search: {search}</div>\n      <Countries.Provider value={searching}>\n        <Search\n          hide={searching.length === 1 && searching[0]?.name ? true : false}\n          countries={searching}\n          search={searchingHandler}\n          ShowClicked={showClickedHandler}\n        />\n      </Countries.Provider>\n      {country}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}